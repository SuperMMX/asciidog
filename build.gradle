plugins {
    id 'application'
}

task publishToLocal

allprojects {
    group = 'org.supermmx.asciidog'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()

        jcenter()
        mavenCentral()

        maven {
            url = 'https://github.com/psiegman/mvn-repo/raw/master/releases'
        }
    }
}

subprojects {
    /*
    plugins {
        id 'groovy'
        id 'maven-publish'
    }
    */

    apply plugin: 'groovy'
    apply plugin: 'maven-publish'


    targetCompatibility = 1.6

    dependencies {
        compile 'org.codehaus.groovy:groovy-all:2.4.3'
        compile 'org.slf4j:slf4j-api:1.7.10'

        testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
            exclude group:'org.codehaus.groovy'
        }

        runtime 'ch.qos.logback:logback-classic:1.1.7'

        testRuntime 'cglib:cglib-nodep:3.2.4'
    }

    compileGroovy {
        groovyOptions.configurationScript = file("${rootDir}/groovyConfig.groovy")
    }

    test {
        systemProperties System.properties
        testLogging.showStandardStreams = true
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    rootProject.publishToLocal.dependsOn tasks.matching { it.name == 'publishToMavenLocal' }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

dependencies {
    runtime project(':asciidog-core')
    runtime project(':asciidog-html5')
    runtime project(':asciidog-epub')
    //runtime project(':asciidog-pdf')
    runtime project(':asciidog-critic')
}

mainClassName = 'org.supermmx.asciidog.AsciiDog'

run {
    // -Pargs="-i INPUT.adoc -o build"
    if (project.hasProperty('args')) {
        args = project.args.split(' ') as List
    }

    systemProperties System.properties
}
